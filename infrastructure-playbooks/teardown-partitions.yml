- name: tear down existing OSD filesystems and logical volumes
  hosts:
  - osds

  tasks:
  - name: include vars of partition_vars.yaml
    include_vars:
      file: partition_vars.yaml

  # need to check if lvm2 is installed
  - name: install lvm2
    package:
      name: lvm2
      state: present

  #- name: identify partitions to use for nvme devices (NVMEdev1)
  #shell: "for n in `seq 1 {{num_nvme_journals}}` ; do echo {{nvmedev}}{{part_prefix}}$n ; done"
  #register: nvme_dev_parts
    #when: part_prefix is defined
    #

  - name: identify partitions to use for the nvme device
    shell: "for n in `seq 1 {{num_nvme_journals}}` ; do echo {{nvmedev}}$n ; done"
    register: nvme_dev_parts
    #when: part_prefix is defined


# BEGIN TEARDOWN
  - name: find any existing OSD filesystems
    shell: "grep /var/lib/ceph/osd /proc/mounts | awk '{print $2}'"
    register: old_osd_filesystems

  - name: tear down any existing OSD filesystems
    shell: "umount -v {{item}}"
    with_items: "{{old_osd_filesystems.stdout_lines}}"

  - name: kill all LVM and parted commands that may have been hung
    shell: "killall -q lvcreate pvcreate vgcreate lvconvert parted || echo -n"
    failed_when: false

## LogVols
  - name: identify any existing ceph named LVs
    shell: "lvscan | grep lv-ceph | awk '/ACTIVE/ { print $2 }' | tr -d \"'\""
    register: old_ceph_lvs

  - name: tear down any existing ceph named LVM logical volumes
    shell: "echo y | lvremove -f {{item}}"
    with_items: "{{old_ceph_lvs.stdout_lines}}"

## Volume Groups
  - name: identify any existing ceph named VGs
    shell: "vgscan | grep vg-ceph | awk '/Found/ { print $4 }' | tr '\"' ' '"
    register: old_ceph_vgs

  - name: tear down any existing ceph named VGs
    shell: "vgremove -f {{item}}"
    with_items: "{{old_ceph_vgs.stdout_lines}}"

  - name: tear down any existing ceph named PVs
    shell: "pvdisplay {{item}} ; if [ $? == 0 ] ; then  pvremove --force --yes {{item}} ; fi "
    with_items: 
      - "{{nvme_dev_parts.stdout_lines}}"

  - name: wait a sec
    shell: sleep 1
    
  - name: tear down partitions on nvme device
    shell: "if [ -e {{item}} ] ; then parted -s {{nvmedev}} rm `echo {{item}} | sed s,{{nvmedev}},,` ; fi"
    with_items:
      - "{{nvme_dev_parts.stdout_lines}}"
